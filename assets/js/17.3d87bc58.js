(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{258:function(t,e,r){"use strict";r.r(e);var n=r(28),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"fiber"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fiber"}},[t._v("#")]),t._v(" fiber")]),t._v(" "),r("p",[t._v("当React遍历树时，它正在执行堆栈中执行。\n因此，当更新到达时，它们到达事件队列（某种程度上）。\n而且只有当执行堆栈为空时，更新才会得到处理。\n这正是Fiber通过使用智能功能几乎重新实现堆栈（暂停和恢复，中止等）来解决的问题。")]),t._v(" "),r("p",[t._v("重新实现堆栈的优点是，您可以将堆栈帧保留在内存中，并根据需要（以及在任何时候）执行它们。")]),t._v(" "),r("p",[t._v("除了调度之外，手动处理堆栈帧还可以释放并发和错误边界等功能。")])])}),[],!1,null,null,null);e.default=s.exports}}]);